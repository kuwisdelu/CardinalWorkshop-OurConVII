pData(rcc_peaks)$rough_diagnosis[cur_run & coord(rcc_peaks)$x < xcutoff] <- "cancer"
}
image(rcc_peaks, rough_diagnosis ~ x * y, layout=c(4,2))
i
i <- 1
cur_run <- run(rcc_peaks) == runNames(rcc_peaks)[i]
xcutoff<-c(35, 23, 28, 39, 29, 28, 44, 32)
rcc_peaks$rough_diagnosis <- factor("normal", level=c("normal", "cancer"))
for ( i in 1:nlevels(run(rcc_peaks)) ) {
cur_run <- run(rcc_peaks) == runNames(rcc_peaks)[i]
pData(rcc_peaks)$rough_diagnosis[cur_run & coord(rcc_peaks)$x < xcutoff[i]] <- "cancer"
}
image(rcc_peaks, rough_diagnosis ~ x * y, layout=c(4,2))
image(rcc_peaks, mz=810, groups=rough_diagnosis, layout=c(4,2))
image(rcc_peaks, mz=810, groups=rough_diagnosis,
contrast.enhance="histogram", layout=c(4,2))
xcutoff<-c(35, 23, 28, 39, 29, 28, 44, 32)
rcc_peaks$rough_diagnosis <- factor("normal", level=c("cancer", "normal"))
for ( i in 1:nlevels(run(rcc_peaks)) ) {
cur_run <- run(rcc_peaks) == runNames(rcc_peaks)[i]
pData(rcc_peaks)$rough_diagnosis[cur_run & coord(rcc_peaks)$x < xcutoff[i]] <- "cancer"
}
image(rcc_peaks, mz=810, groups=rough_diagnosis,
contrast.enhance="histogram", layout=c(4,2))
rcc_var <- summmarize(rcc_peaks, .stat="var")
rcc_var <- summarize(rcc_peaks, .stat="var")
plot(rcc_var)
rcc_var <- summarize(rcc_peaks, .stat="var", .as="DataFrame")
plot(rcc_var, var ~ mz)
rcc_var <- summarize(rcc_peaks, .stat="var", .as="DataFrame")
plot(rcc_var, var ~ mz)
plot(rcc_var, var ~ mz, main="Variance")
plot(rcc_var, var ~ mz, main="variance")
rcc_var$var
quantile(rcc_var$var, 0.8)
rcc_var$var > quantile(rcc_var$var, 0.8)
rcc_peaks2 <- rcc_peaks[rcc_var$var > quantile(rcc_var$var, 0.8),]
rcc_peaks2
features(rcc_peaks2)
mz(rcc_peaks2)
features(rcc_peaks2, mz=885)
image(rcc_peaks2, mz=885)
rcc_dgmm1 <- spatialDGMM(rcc_peaks2, feature=16, r=1, k=4)
?spatialDGMM
rcc_dgmm1 <- spatialDGMM(rcc_peaks2[16,], r=1, k=4)
image(rcc_dgmm1)
rcc_dgmm1 <- spatialDGMM(rcc_peaks2[16,], r=1, k=4, groups=1)
image(rcc_dgmm1)
summary(rcc_dgmm1)
rcc_peaks$groups <- interaction(run(rcc_peaks), rcc_peaks$rough_diagnosis)
rcc_peaks
pData(rcc_peaks)
rcc_peaks2 <- rcc_peaks[rcc_var$var > quantile(rcc_var$var, 0.8),]
rcc_peaks2
rcc_dgmm <- spatialDGMM(rcc_peaks2, r=1, k=4, groups=rcc_peaks2$groups)
summary(rcc_dgmm)
mtest <- meansTest(rcc_peaks2, ~ rough_diagnosis, groups=rcc_peaks2$groups)
mtest
summary(mtest)
stest<-segmentationTest(rcc_dgmm, ~ diagnosis, classControl = "Mscore")
summary(stest)
stest <- segmentationTest(rcc_dgmm, ~ diagnosis, classControl = "Ymax")
summary(stest)
topFeatures(stest, p.adjust="fdr", AdjP < .05)
image(rcc_peaks2, mz=325)
image(rcc_peaks2, mz=325, contrast.enhance="histogram")
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis, classControl = "Mscore")
summary(stest)
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis, classControl = "Ymax")
summary(stest)
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis, classControl = "Mscore")
summary(stest)
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis)
summary(stest)
topFeatures(stest, p.adjust="fdr", AdjP < .05)
image(rcc_peaks2, mz=885, contrast.enhance="histogram")
plot(stest, model=list(feature=16))
plot(stest, model=list(feature=1))
plot(stest, model=list(feature=16))
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis)
summary(stest)
summary(stest)
summary(mtest)
summary(mtest)
topFeatures(stest, p.adjust="fdr", AdjP < .05)
plot(stest, model=list(feature=16))
image(rcc_peaks2, mz=885, contrast.enhance="histogram")
plot(stest, model=list(feature=16))
image(rcc_peaks2, mz=885, contrast.enhance="histogram")
image(rcc_peaks2, mz=885, contrast.enhance="histogram", layout=c(4,2))
image(rcc_peaks2, mz=885,layout=c(4,2),
contrast.enhance="histogram",
normalize.image="linear")
image(rcc_peaks2, mz=885,layout=c(4,2),
contrast.enhance="suppress",
normalize.image="linear")
plot(stest, model=list(feature=16, 17))
plot(stest, model=list(feature=16, 17))
plot(stest, model=list(feature=16))
topFeatures(stest, p.adjust="fdr", AdjP < .05)
rcc_peaks2 <- rcc_peaks[rcc_var$var >= quantile(rcc_var$var, 0.8),]
rcc_peaks2
image(rcc_dgmm1)
summary(mtest)
topFeatures(mtest, p.adjust="fdr", AdjP < .05)
topFeatures(mtest, p.adjust="fdr", AdjP < .05)
topFeatures(stest, p.adjust="fdr", AdjP < .05)
library(Cardinal)
mse <- readMSIData("~/Documents/Datasets/PRIDE/PXD001283", mass.range=c(700,900), resolution=6)
mse
mse <- readMSIData("~/Documents/Datasets/PRIDE/PXD001283/HR2MSI mouse urinary bladder S096.imzML", mass.range=c(700,900), resolution=6)
mse
g1 <- image(mouse, mz=c(743.5483, 798.5419, 741.5307),
superpose=TRUE,
contrast.enhance="suppress",
normalize.image="linear",
col=c("red", "green", "blue"))
print(g1)
g1 <- image(mse, mz=c(743.5483, 798.5419, 741.5307),
superpose=TRUE,
contrast.enhance="suppress",
normalize.image="linear",
col=c("red", "green", "blue"))
print(g1)
options(Cardinal.dark=TRUE)
print(g1)
darkmode()
print(g1)
print(g1, xlim=c(50,200))
url <- "https://ms-imaging.org/wp/wp-content/uploads/2019/03/S043_Processed_imzML1.1.1.zip"
tmpfile <- tempfile()
tmpdir <- tempdir()
download.file(url, destfile=tmpfile)
unzip(tmpfile, exdir=tmpdir)
file <- grep(".imzML", list.files(tmpdir), value=TRUE)
file <- file.path(tmpdir, file)
file
darkmode()
lightmode()
print(g1, xlim=c(50,200))
print(g1, xlim=c(50,200))
getOption("Cardinal.dark")
options(Cardinal.dark=FALSE)
print(g1, xlim=c(50,200))
options(Cardinal.dark=FALSE)
getOption("Cardinal.dark")
print(g1, xlim=c(50,200))
dev.new()
print(g1, xlim=c(50,200))
mse
url <- "https://ms-imaging.org/wp/wp-content/uploads/2019/03/S043_Processed_imzML1.1.1.zip"
tmpfile <- tempfile()
tmpdir <- tempdir()
download.file(url, destfile=tmpfile)
unzip(tmpfile, exdir=tmpdir)
file <- grep(".imzML", list.files(tmpdir), value=TRUE)
file <- file.path(tmpdir, file)
file
mse <- readMSIData(file, resolution=0.05, units="mz")
mse <- collect(mse)
roi <- selectROI(mse, mz=157.2, plusminus=0.25)
dev.new()
roi <- selectROI(mse, mz=157.2, plusminus=0.25)
roi
image(mse, roi ~ x * y)
roi
pData(mse)$tissue <- roi
pData(mse)
?read.csv
roi <- expand.grid(x=1:10, y=1:10)
roi
pixels(mse, coord=roi)
pData(mse)
pData(mse)$roi <- FALSE
pData(mse)$roi[pixels(mse, coord=roi)] <- TRUE
pData(mse)
mse[,mse$roi]
?writeImzML
roi2 <- c(TRUE, TRUE, FALSE) | c(TRUE, FALSE, FALSE)
roi2
roi2 <- makeFactor(a=c(TRUE, TRUE, FALSE),
b=c(FALSE, FALSE, TRUE))
roi2
image(mse, mz=157.2, plusminus=0.25)
?pdf
pdf_file <- paste0(tempfile(), ".pdf")
pdf(file=pdf_file, width=9, height=4)
image(mse, mz=157.2, plusminus=0.25)
image(mse, mz=157.2, plusminus=0.25)
dev.off()
pdf_file
image(mse, mz=157.2, plusminus=0.25)
?png
?tiff
imageData(mse)
search()
library(CardinalWorkflows)
register(SerialParam())
library(Cardinal)
register(SerialParam())
data(pig206, package="CardinalWorkflows")
pig206
pig206 <- as(pig206, "MSImagingExperiment")
pig206
image(pig206, mz=885.5, plusminus=0.25)
pig206_mean <- summarize(pig206, .stat="mean")
pig206_mean
plot(pig206_mean)
pig206_tic <- summarize(pig206, .stat=c(tic="sum"),
pig206_tic <- summarize(pig206, .stat=c(tic="sum"), .by="pixel")
pig206_tic <- summarize(pig206, .stat=c(tic="sum"), .by="pixel")
pig206_tic <- summarize(pig206, .stat=c(tic="sum"), .by="pixel")
pig206_tic
image(pig206_tic)
pig206_mean
pig206_mean %>%
peakPick(SNR=3) %>%
peakAlign(ref="mean",
tolerance=0.5,
units="mz") %>%
peakFilter()
pig206_ref <- pig206_mean %>%
peakPick(SNR=3) %>%
peakAlign(ref="mean",
tolerance=0.5,
units="mz") %>%
peakFilter() %>%
process()
pig206_ref
mz(pig206_ref)
pig206_peaks <- pig206 %>%
normalize(method="tic") %>%
peakBin(ref=mz(pig206_ref),
tolerance=0.5,
units="mz") %>%
process()
pig206_peaks
image(pig206_peaks, mz=187)
image(pig206_peaks, mz=840)
image(pig206_peaks, mz=537)
pig206_peaks
pig206_pca <- PCA(pig206_peaks, ncomp=3)
pig206_pca
image(pig206_pca)
image(pig206_pca, contrast.enhance="histogram", normalize.image="linear")
plot(pig206_pca, lwd=2)
image(pig206_pca, contrast.enhance="histogram", normalize.image="linear")
plot(pig206_pca, lwd=2)
image(pig206_pca, contrast.enhance="histogram", normalize.image="linear")
set.seed(1)
pig206_ssc <- spatialShrunkenCentroids(pig206_peaks, method="adaptive",
r=2, s=c(0,5,10,15,20,25), k=10)
summary(pig206_ssc)
image(pig206_ssc, model=list(s=c(10,15,20,25)))
setup.layout(c(3,1))
cols <- discrete.colors(6)
cols
cols
setup.layout(c(3,1))
plot(pig206_ssc, model=list(s=20), column=1, col=cols[1], lwd=2, layout=NULL)
plot(pig206_ssc, model=list(s=20), column=5, col=cols[5], lwd=2, layout=NULL)
plot(pig206_ssc, model=list(s=20), column=6, col=cols[6], lwd=2, layout=NULL)
plot(pig206_ssc, model=list(s=20), lwd=2)
image(pig206_ssc, model=list(s=20))
RNGkind("L'Ecuyer-CMRG")
set.seed(1)
pig206_ssc <- spatialShrunkenCentroids(pig206_peaks, method="adaptive",
r=2, s=c(0,5,10,15,20,25), k=10)
image(pig206_ssc, model=list(s=20))
cols <- discrete.colors(6)
setup.layout(c(3,1))
plot(pig206_ssc, model=list(s=20), column=1, col=cols[1], lwd=2, layout=NULL)
plot(pig206_ssc, model=list(s=20), column=5, col=cols[5], lwd=2, layout=NULL)
plot(pig206_ssc, model=list(s=20), column=6, col=cols[6], lwd=2, layout=NULL)
topFeatures(pig206_ssc, model=list(s=20), class==1)
topFeatures(pig206_ssc, model=list(s=20), class==5)
topFeatures(pig206_ssc, model=list(s=20), class==6)
library(CardinalWorkflows)
register(SerialParam())
RNGkind("L'Ecuyer-CMRG")
data(rcc, package="CardinalWorkflows")
rcc <- as(rcc, "MSImagingExperiment")
rcc
pData(rcc)
image(rcc, diagnosis ~ x * y)
image(rcc, diagnosis ~ x * y, key=TRUE)
image(rcc, diagnosis ~ x * y)
rcc <- rcc %>%
select(!is.na(diagnosis)) %>%
normalize(method="tic") %>%
process()
rcc
rcc_mean <- summarize(rcc, .stat="mean")
rcc_ref <- rcc_mean %>%
peakPick(SNR=3) %>%
peakAlign(ref="mean",
tolerance=0.5,
units="mz") %>%
peakFilter() %>%
process()
rcc_peaks <- rcc %>%
peakBin(ref=mz(rcc_ref),
tolerance=0.5,
units="mz") %>%
process()
rcc_peaks
image(rcc_peaks, mz=810, layout=c(4,2),
contrast.enhance="suppress", normalize.image="linear")
rcc_pca <- PCA(rcc_peaks, ncomp=2)
image(rcc_pca, layout=c(4,2), normalize.image="linear")
resultData(rcc_pca, 1, "scores")
DataFrame(resultData(rcc_pca, 1, "scores"))
pc_scores <- DataFrame(resultData(rcc_pca, 1, "scores"))
pc_scores
plot(pc_scores, PC1 ~ PC2, groups=rcc$diagnosis)
rcc_ssc_cv <- crossValidate(rcc, rcc$diagnosis,
.fun="spatialShrunkenCentroids",
r=1, s=c(0,3,6,9,12,15),
.fold=run(rcc), .process=TRUE,
.processControl=list(SNR=3,
tolerance=0.5,
units="mz"))
summary(rcc_ssc_cv)
plot(summary(rcc_ssc_cv), Accuracy ~ s, type='b')
abline(v=9, lty=2, col="red")
rcc_ssc <- spatialShrunkenCentroids(rcc_peaks, rcc$diagnosis, r=1, s=9)
summary(rcc_ssc)
image(rcc_ssc, layout=c(4,2))
data(rcc, package="CardinalWorkflows")
rcc <- as(rcc, "MSImagingExperiment")
image(rcc,mz=810)
rcc_peaks <- rcc %>%
normalize(method="tic") %>%
peakBin(ref=mz(rcc_ref),
tolerance=0.5,
units="mz") %>%
process()
rcc_peaks
xcutoff<-c(35, 23, 28, 39, 29, 28, 44, 32)
rcc_peaks$rough_diagnosis <- factor("normal", level=c("cancer", "normal"))
for ( i in 1:nlevels(run(rcc_peaks)) ) {
cur_run <- run(rcc_peaks) == runNames(rcc_peaks)[i]
pData(rcc_peaks)$rough_diagnosis[cur_run & coord(rcc_peaks)$x < xcutoff[i]] <- "cancer"
}
rcc_peaks$groups <- interaction(run(rcc_peaks), rcc_peaks$rough_diagnosis)
rcc_peaks2 <- rcc_peaks[rcc_var$var >= quantile(rcc_var$var, 0.8),]
rcc_var <- summarize(rcc_peaks, .stat="var", .as="DataFrame")
rcc_peaks2 <- rcc_peaks[rcc_var$var >= quantile(rcc_var$var, 0.8),]
rcc_dgmm <- spatialDGMM(rcc_peaks2, r=1, k=4, groups=rcc_peaks2$groups)
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis)
summary(stest)
topFeatures(stest, p.adjust="fdr", AdjP < .10)
summary(mtest)
topFeatures(stest, p.adjust="fdr", AdjP < .10)
library(CardinalWorkflows)
register(SerialParam())
RNGkind("L'Ecuyer-CMRG")
data(rcc, package="CardinalWorkflows")
rcc <- as(rcc, "MSImagingExperiment")
rcc
rcc_mean <- summarize(rcc, .stat="mean")
rcc_ref <- rcc_mean %>%
peakPick(SNR=3) %>%
peakAlign(ref="mean",
tolerance=0.5,
units="mz") %>%
peakFilter() %>%
process()
rcc_peaks <- rcc %>%
normalize(method="tic") %>%
peakBin(ref=mz(rcc_ref),
tolerance=0.5,
units="mz") %>%
process()
rcc_peaks
rcc_var <- summarize(rcc_peaks, .stat="var", .as="DataFrame")
plot(rcc_var, var ~ mz, main="variance")
rcc_peaks2 <- rcc_peaks[rcc_var$var >= quantile(rcc_var$var, 0.8),]
set.seed(1)
rcc_dgmm1 <- spatialDGMM(rcc_peaks2[16,], r=1, k=4, groups=1)
summary(rcc_dgmm1)
image(rcc_dgmm1, layout=c(4,2))
set.seed(1)
rcc_dgmm <- spatialDGMM(rcc_peaks2, r=1, k=4, groups=rcc_peaks2$groups)
summary(rcc_dgmm)
rcc_peaks2$groups
rcc_peaks$rough_diagnosis
xcutoff<-c(35, 23, 28, 39, 29, 28, 44, 32)
rcc_peaks$rough_diagnosis <- factor("normal", level=c("cancer", "normal"))
for ( i in 1:nlevels(run(rcc_peaks)) ) {
cur_run <- run(rcc_peaks) == runNames(rcc_peaks)[i]
pData(rcc_peaks)$rough_diagnosis[cur_run & coord(rcc_peaks)$x < xcutoff[i]] <- "cancer"
}
rcc_peaks$groups <- interaction(run(rcc_peaks), rcc_peaks$rough_diagnosis)
rcc_var <- summarize(rcc_peaks, .stat="var", .as="DataFrame")
rcc_peaks2 <- rcc_peaks[rcc_var$var >= quantile(rcc_var$var, 0.8),]
set.seed(1)
rcc_dgmm <- spatialDGMM(rcc_peaks2, r=1, k=4, groups=rcc_peaks2$groups)
summary(rcc_dgmm)
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis)
summary(stest)
set.seed(2)
rcc_dgmm <- spatialDGMM(rcc_peaks2, r=1, k=4, groups=rcc_peaks2$groups)
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis)
summary(stest)
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis, classControl="Mscore")
summary(stest)
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis)
summary(stest)
rcc_peaks2
image(rcc_peaks, mz=810, groups=rough_diagnosis,
contrast.enhance="histogram", layout=c(4,2))
set.seed(3)
rcc_dgmm <- spatialDGMM(rcc_peaks2, r=1, k=4, groups=rcc_peaks2$groups)
summary(rcc_dgmm)
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis)
summary(stest)
set.seed(100)
rcc_dgmm <- spatialDGMM(rcc_peaks2, r=1, k=4, groups=rcc_peaks2$groups)
summary(rcc_dgmm)
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis)
summary(stest)
set.seed(4)
rcc_dgmm <- spatialDGMM(rcc_peaks2, r=1, k=4, groups=rcc_peaks2$groups)
summary(rcc_dgmm)
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis)
summary(stest)
set.seed(5)
rcc_dgmm <- spatialDGMM(rcc_peaks2, r=1, k=4, groups=rcc_peaks2$groups)
summary(rcc_dgmm)
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis)
summary(stest)
set.seed(2020)
rcc_dgmm <- spatialDGMM(rcc_peaks2, r=1, k=4, groups=rcc_peaks2$groups)
summary(rcc_dgmm)
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis)
summary(stest)
set.seed(314)
rcc_dgmm <- spatialDGMM(rcc_peaks2, r=1, k=4, groups=rcc_peaks2$groups)
summary(rcc_dgmm)
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis)
summary(stest)
set.seed(1)
rcc_dgmm1 <- spatialDGMM(rcc_peaks2[16,], r=1, k=4, groups=1)
summary(rcc_dgmm1)
image(rcc_dgmm1, layout=c(4,2))
set.seed(1)
rcc_dgmm <- spatialDGMM(rcc_peaks2, r=1, k=4, groups=rcc_peaks2$groups)
summary(rcc_dgmm)
mtest <- meansTest(rcc_peaks2, ~ rough_diagnosis, groups=rcc_peaks2$groups)
summary(mtest)
topFeatures(mtest, p.adjust="fdr", AdjP < .1)
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis)
summary(stest)
topFeatures(stest, p.adjust="fdr", AdjP < .1)
plot(stest, model=list(feature=16))
image(rcc_peaks2, mz=885, layout=c(4,2),
contrast.enhance="suppress",
normalize.image="linear")
image(stest)
image(stest, model=16)
set.seed(1)
rcc_dgmm1 <- spatialDGMM(rcc_peaks2[16,], r=2, k=4, groups=1)
summary(rcc_dgmm1)
image(rcc_dgmm1, layout=c(4,2))
set.seed(1)
rcc_dgmm <- spatialDGMM(rcc_peaks2, r=2, k=4, groups=rcc_peaks2$groups)
summary(rcc_dgmm)
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis)
summary(stest)
image(rcc_dgmm, model=16)
stest
summary(stest)
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis)
summary(stest)
image(stest, model=16)
summary(rcc_dgmm)
set.seed(1)
rcc_dgmm1 <- spatialDGMM(rcc_peaks2[16,], r=2, k=3, groups=1)
summary(rcc_dgmm1)
image(rcc_dgmm1, layout=c(4,2))
set.seed(1)
rcc_dgmm <- spatialDGMM(rcc_peaks2, r=2, k=3, groups=rcc_peaks2$groups)
summary(rcc_dgmm)
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis)
summary(stest)
image(stest, model=16)
set.seed(1)
rcc_dgmm1 <- spatialDGMM(rcc_peaks2[16,], r=2, k=4, groups=1)
summary(rcc_dgmm1)
image(rcc_dgmm1, layout=c(4,2))
image(rcc_dgmm1, layout=c(4,2), values="class")
set.seed(1)
rcc_dgmm <- spatialDGMM(rcc_peaks2, r=2, k=4, groups=rcc_peaks2$groups)
summary(rcc_dgmm)
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis)
summary(stest)
topFeatures(stest, p.adjust="fdr", AdjP < .1)
set.seed(1)
rcc_dgmm1 <- spatialDGMM(rcc_peaks2[16,], r=1, k=4, groups=1)
summary(rcc_dgmm1)
image(rcc_dgmm1, layout=c(4,2))
set.seed(1)
rcc_dgmm <- spatialDGMM(rcc_peaks2, r=1, k=4, groups=rcc_peaks2$groups)
summary(rcc_dgmm)
stest <- segmentationTest(rcc_dgmm, ~ rough_diagnosis)
summary(stest)
topFeatures(stest, p.adjust="fdr", AdjP < .1)
plot(stest, model=list(feature=16))
image(rcc_peaks2, mz=885, layout=c(4,2),
contrast.enhance="suppress",
normalize.image="linear")
